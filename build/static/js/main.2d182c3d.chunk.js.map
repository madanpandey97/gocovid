{"version":3,"sources":["components/HeaderComponent.js","components/MarkTextComponent.js","components/DataPanelComponent.js","components/BlinkingTextComponent.js","components/TableComponent.js","components/MapComponent.js","components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","collapse","onClick","bind","this","setState","className","dark","expand","scrolling","fixed","href","isOpen","navbar","left","active","to","right","fab","icon","React","Component","MarkText","DataPanel","covid","items","console","log","class","id","lastupdatedtime","src","alt","confirmed","recovered","deaths","deltaconfirmed","deltarecovered","deltadeaths","BlinkingText","TableComp","map","data","index","key","scope","renderTableData","MapComp","style","height","title","allowfullscreen","Main","error","isLoaded","dataState","fetch","then","res","json","result","statewise","newData","slice","length","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2d182c3d.chunk.js","sourcesContent":["import React from 'react';\r\nimport {  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon, MDBContainer } from 'mdbreact';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          collapse: false,\r\n      };\r\n      this.onClick = this.onClick.bind(this);\r\n  }\r\n\r\n  onClick() {\r\n    this.setState({\r\n        collapse: !this.state.collapse,\r\n      });\r\n  }\r\n\r\n  render() {\r\n    // const bgPink = {backgroundColor: 'purple-gradient'}\r\n    // const container = {height: 1300}\r\n    return(\r\n      <div>\r\n        <Router>\r\n          <header>\r\n            <MDBNavbar className =\"purple-gradient\"  dark expand=\"md\" scrolling fixed=\"top\">\r\n              <MDBContainer>\r\n              <MDBNavbarBrand href=\"/\">\r\n                  <strong>GoCoronaGo</strong>\r\n              </MDBNavbarBrand>\r\n              <MDBNavbarToggler onClick={ this.onClick } />\r\n              <MDBCollapse isOpen = { this.state.collapse } navbar>\r\n                <MDBNavbarNav left>\r\n                  <MDBNavItem active>\r\n                      <MDBNavLink to=\"#\">Home</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                      <MDBNavLink to=\"#\">Features</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                      <MDBNavLink to=\"#\">Pricing</MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"#\">Options</MDBNavLink>\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n                <MDBNavbarNav right>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"#\"><MDBIcon fab icon=\"facebook-f\" /></MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"#\"><MDBIcon fab icon=\"twitter\" /></MDBNavLink>\r\n                  </MDBNavItem>\r\n                  <MDBNavItem>\r\n                    <MDBNavLink to=\"#\"><MDBIcon fab icon=\"instagram\" /></MDBNavLink>\r\n                  </MDBNavItem>\r\n                </MDBNavbarNav>\r\n              </MDBCollapse>\r\n              </MDBContainer>\r\n            </MDBNavbar>\r\n          </header>\r\n        </Router>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\n\r\nclass MarkText extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n            \r\n            <div className=\"purple-gradient wow fadeIn mt-4\">\r\n                <marquee>\r\n                    <strong className=\"white-text\">\r\n                                This is not official website.\r\n                                We are providing data directly fetched from Ministry of Health and Family Welfare.\r\n                                More Updates are comming soon.\r\n                    </strong>\r\n                </marquee>\r\n            </div>\r\n       \r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MarkText;","import React, {Component} from 'react';\r\nimport {  MDBContainer } from \"mdbreact\";\r\n\r\n// import { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport './style.css';\r\n\r\nclass DataPanel extends Component{\r\n\r\n      // constructor(props) {\r\n      //       super(props);  \r\n      //     }\r\n      \r\n      //     componentDidMount() {\r\n      //       fetch(\"https://api.covid19india.org/data.json\")\r\n      //         .then(res => res.json())\r\n      //         .then(\r\n      //           (result) => {\r\n      //             this.setState({\r\n      //               isLoaded: true,\r\n      //               items: result.statewise[0]\r\n      //             });\r\n      //           },\r\n                \r\n      //           // Note: it's important to handle errors here\r\n      //           // instead of a catch() block so that we don't swallow\r\n      //           // exceptions from actual bugs in components.\r\n      //           (error) => {\r\n      //             this.setState({\r\n      //               isLoaded: true,\r\n      //               error\r\n      //             });\r\n      //           }\r\n      //         )\r\n      //     }     \r\n\r\n    render(){\r\n\r\n      const covid = this.props.items;\r\n      console.log(covid)\r\n\r\n        return(\r\n\r\n            <section>\r\n                  <br></br>\r\n                  <MDBContainer>\r\n                  <div className=\"row\">\r\n\r\n                              <div class=\" col-12 col-sm-6 col-md-6  mb-3 mb-md-0\">\r\n                                    \r\n                                    \r\n                                          <div className=\"row\">\r\n                                                <div className=\"col-6 col-sm-6 col-md-6  \" id=\"dateid\">\r\n                                                <p className=\"pink-text \"><strong>Covid India Tracker<br /><span id=\"datesmallid\">A Self Initiative </span></strong></p>\r\n                                                </div>\r\n                                                <div className=\"col-6 col-sm-6 col-md-6 \" id=\"dateid\">\r\n                                                <p className=\"pink-text  float-right\" ><strong>last updated -<br /><span id=\"datesmallid\">{covid.lastupdatedtime}</span></strong></p>\r\n                                                </div>\r\n\r\n                                          </div>\r\n                                           \r\n                                 \r\n                                    <div  className=\" track-list mt-1\">\r\n\r\n                                          <ul className=\"list-inline  text-center\">\r\n                                        \r\n                                          <li className=\"list-inline-item text-center  z-depth-1 px-3\">\r\n                                                      <img src=\"assets/img/icon-infected.png\"  alt =\"virus\" className=\"mt-1\" />\r\n                                                      <h5 className=\"blue-text mt-2\" id=\"textsize\"><strong>Total cases</strong></h5>\r\n                                                      <h5 className=\"pink-text  pb-2 \" id=\"textsize\"><i class=\"fas fa-hospital\"></i> &nbsp;{covid.confirmed}</h5>\r\n                        \r\n                                          </li>\r\n\r\n                                                <li className=\"list-inline-item text-center  z-depth-1 px-3\">\r\n                                                      <img src=\"assets/img/green.png\"  alt =\"virus\" className=\"mt-1\" />\r\n                                                <h5 className=\"blue-text mt-2\" id=\"textsize\"><strong>Discharged</strong></h5>\r\n                                                      <h5 className=\"pink-text  pb-2 \" id=\"textsize\"><i class=\"far fa-smile\"></i> &nbsp;{covid.recovered}</h5>\r\n                        \r\n                                          </li>\r\n                                          <li className=\"list-inline-item text-center  z-depth-1 px-3\">\r\n                                                      <img src=\"assets/img/red.png\" alt =\"virus\" className=\"mt-1\" />\r\n                                                <h5 className=\"blue-text mt-2\" id=\"textsize\"><strong>Deaths</strong></h5>\r\n                                                      <h5 className=\"pink-text  pb-2 \" id=\"textsize\"><i class=\"fas fa-skull-crossbones\"></i> &nbsp;{covid.deaths}</h5>\r\n                        \r\n                                          </li>\r\n                                        \r\n                                    </ul>\r\n                               </div>\r\n    \r\n                              </div>\r\n                              <div class=\"col-12 col-sm-6 col-md-6\" id=\"blinkid\">\r\n                                    \r\n                                   \r\n                                    <div className=\"row\">\r\n                                                <div className=\"col-6 col-sm-6 col-md-6  \" id=\"dateid\">\r\n                                                <p className=\"pink-text \"><strong>Today's Report <br /><span  id=\"datesmallid\">Opensource COVID19-India API</span>  </strong></p>\r\n                                                </div>\r\n                                                <div className=\"col-6 col-sm-6 col-md-6 float-right\" id=\"dateid\">\r\n                                                <p className=\"pink-text  float-right\" ><strong>ICMR Data <br /></strong></p>\r\n                                             \r\n                                                </div>\r\n\r\n                                          </div>\r\n                                    \r\n                                          <div  className=\" track-list mt-1\">\r\n\r\n                                    <ul className=\"list-inline text-center\">\r\n                                    <li className=\"list-inline-item text-center z-depth-1 px-3\">\r\n                                                      <img src=\"assets/img/icon-infected.png\"  alt =\"virus\" className=\"mt-1\" />\r\n                                                <h5 className=\"blue-text mt-2\" id=\"textsize\"><strong>New Cases</strong></h5>\r\n                                                      <h5 className=\"pink-text  pb-2 \" id=\"textsize\"><i class=\"fas fa-hospital\"></i> &nbsp;{covid.deltaconfirmed}</h5>\r\n                        \r\n                                          </li>\r\n                                          <li className=\"list-inline-item text-center z-depth-1 px-3\">\r\n                                                      <img src=\"assets/img/orange.png\"  alt =\"virus\" className=\"mt-1\" />\r\n                                                <h5 className=\"blue-text mt-2\" id=\"textsize\"><strong>Discharged</strong></h5>\r\n                                                      <h5 className=\"pink-text  pb-2 \" id=\"textsize\"><i class=\"far fa-smile\"></i> &nbsp;{covid.deltarecovered}</h5>\r\n                        \r\n                                          </li>\r\n                                          <li className=\"list-inline-item text-center z-depth-1 px-3\">\r\n                                                      <img src=\"assets/img/red.png\"  alt =\"virus\" className=\"mt-1\" />\r\n                                                <h5 className=\"blue-text mt-2\" id=\"textsize\"><strong>Deaths</strong></h5>\r\n                                                      <h5 className=\"pink-text  pb-2 \" id=\"textsize\"><i class=\"fas fa-skull-crossbones\"></i> &nbsp;{covid.deltadeaths}</h5>\r\n                        \r\n                                          </li>\r\n                                    \r\n                                    </ul>\r\n</div>\r\n\r\n                        </div>\r\n\r\n                  </div>\r\n                 \r\n                  </MDBContainer>\r\n        </section>\r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default DataPanel;","import React, {Component} from 'react';\r\n\r\nclass BlinkingText extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n            \r\n            \r\n            <section class=\" purple-gradient wow fadeIn\" id=\"blinkid\">\r\n                <h6 class=\"blink-one white-text text-center px-2 py-2\"><strong>For any technical enquiry with respect to COVID19, you may kindly email on technicalquery.covid19@gov.in</strong></h6>\r\n            </section>\r\n        \r\n       \r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default BlinkingText;","import React, {Component} from 'react';\r\n\r\n\r\n\r\nclass TableComp extends Component{\r\n\r\n    \r\n  constructor(props) {\r\n    \r\n    super(props);\r\n\r\n    this.state = {\r\n      items: props.items\r\n    };\r\n   }\r\n\r\n  \r\n  renderTableData() {\r\n    \r\n    return this.props.items.map((data, index) => {\r\n       const { state, confirmed, active, recovered, deaths } = data //destructuring\r\n       return (\r\n          <tr key={state}>\r\n            <td><b>{state}</b></td>\r\n             <td>{confirmed}</td>\r\n             <td>{active}</td>\r\n             <td>{recovered}</td>\r\n             <td>{deaths}</td>\r\n          </tr>\r\n       )\r\n    })\r\n }\r\n\r\n\r\n    render(){\r\n        // const tableStyle = {overflow-Y : hidden};\r\n        // const tableData =this.state.items.slice(1, this.state.items.length);\r\n       \r\n        return(\r\n            \r\n            < div className=\"card text-center mb-3\" >\r\n\r\n            <div className=\"card-body\">\r\n               <div className=\" \"  >\r\n               <div className=\"text-center\">\r\n                  {/* <h6 className=\"blue-text \"><strong>State wise data of Covid19</strong></h6> */}\r\n                    <p className=\"pink-text \"><strong>State wise data of Covid19 </strong></p>\r\n                   {/* <p className=\"pink-text \"><strong>Last Refreshed- </strong></p> */} \r\n               </div>\r\n               <div className=\"table-responsive   w-100 d-block d-md-table\" >\r\n\r\n                     <table className=\"table\">\r\n                        <thead>\r\n                          <tr>\r\n                              <th scope=\"col\">State/UT</th>\r\n                            \r\n                            <th scope=\"col\">Total Case</th>\r\n                            <th scope=\"col\">Active</th>\r\n                            <th scope=\"col\">Discharged</th>\r\n                              <th scope=\"col\">Deaths</th>\r\n                         \r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                       {this.renderTableData()}\r\n                        </tbody>\r\n                   </table>\r\n               </div>\r\n\r\n               </div>\r\n          </div>\r\n        </div>\r\n       \r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default TableComp;","import React, {Component} from 'react';\r\n\r\n\r\nclass MapComp extends Component{\r\n\r\n    render(){\r\n\r\n        return(\r\n            \r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h6 className=\"blue-text pb-2\"><strong>Lets Fight Together and defeat Corona</strong></h6>\r\n                    <div className=\"view overlay\">\r\n                        <img src=\"assets/img/v.png\" className=\"card-img-top img-fluid px-5 py-5\" alt=\"virus\" />\r\n                        {/* <a href=\"\" target=\"_blank\">\r\n                                <div className=\"mask rgba-white-slight\"></div>\r\n                        </a> */}\r\n                    </div>\r\n                    </div>\r\n\r\n              \r\n                <div className=\"card-body\">\r\n                  \r\n                        <h6 className=\"blue-text pb-2\"><strong>Stay Home Stay Safe</strong></h6>\r\n                        <p className=\"pink-text pb-2\"><strong>Check all data related to corona virus</strong></p>\r\n                        <div className=\"embed-responsive embed-responsive-16by9\" style={{height: \"600px\"}}>\r\n                            <iframe title=\"iframetitle\" className=\"embed-responsive-item\" src=\"https://maps.mapmyindia.com/corona\" allowfullscreen></iframe>\r\n                        </div>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default MapComp;","import React , {Component} from 'react';\r\n\r\nimport {  MDBContainer } from \"mdbreact\";\r\nimport Header from './HeaderComponent';\r\nimport MarkText from './MarkTextComponent';\r\nimport DataPanel from './DataPanelComponent';\r\nimport BlinkingText from './BlinkingTextComponent';\r\nimport TableComp from './TableComponent';\r\nimport MapComp from './MapComponent';\r\nclass Main extends Component{\r\n\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      data: [],\r\n      dataState:[]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://api.covid19india.org/data.json\")\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            data: result.statewise[0],\r\n            dataState:result.statewise\r\n          });\r\n        },\r\n        \r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }     \r\n\r\n\r\n    render(){\r\n        \r\n        const newData = this.state.dataState.slice(1,this.state.dataState.length);\r\n        \r\n        return(\r\n            <main class=\"mt-2 pt-5\">\r\n                    <Header />\r\n                    <MarkText />\r\n                    <DataPanel  items={this.state.data} />\r\n                    <BlinkingText />\r\n                    <br></br>\r\n                    <MDBContainer>             \r\n                        <div class=\"row\">\r\n                                <div class=\"col-sm-6 col-md-8  mb-3 mb-md-0\">\r\n                                    <TableComp items={newData} />\r\n                                </div>\r\n                                <div class=\"col-sm-8 col-md-4\">\r\n                                    <MapComp />\r\n                                </div>\r\n                            </div>\r\n                    </MDBContainer> \r\n            </main>\r\n             \r\n        );\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport Main from './components/MainComponent';\r\n\r\nclass App extends Component{\r\n\r\n  render(){\r\n    return(\r\n      \r\n   \r\n      <div className=\"App\">\r\n        <Main />\r\n      </div>\r\n   \r\n          );\r\n        }\r\n     \r\n     \r\n   }\r\n\r\n\r\n    \r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.js';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}